apiVersion: apps/v1
kind: Deployment
metadata:
  name: discodigg
  namespace: discodigg-prod
  labels: { app: discodigg }
spec:
  replicas: 1
  selector:
    matchLabels: { app: discodigg }
  template:
    metadata:
      labels: { app: discodigg }
    spec:
      # imagePullSecrets: [ { name: ogrodje-regcred } ]
      containers:
        - name: discodigg
          image: ghcr.io/otobrglez/discodigg:0.0.3
          ports: [ { containerPort: 8081 } ]
          args: [ "server", "--refresh-interval=PT360S", "/tmp/servers.yml" ]
          env:
            - { name: OTEL_TRACES_EXPORTER, value: "none" }
            - { name: OTEL_METRICS_EXPORTER, value: "none" }
            - { name: OTEL_LOGS_EXPORTER, value: "none" }
            - name: JAVA_OPTS
              value: "--sun-misc-unsafe-memory-access=allow --enable-native-access=ALL-UNNAMED"
          volumeMounts:
            - name: config-volume
              mountPath: /tmp/servers.yml
              subPath: servers.yml

      volumes:
        - name: config-volume
          configMap:
            name: servers-config

#         livenessProbe:
#           httpGet:
#             path: /grid
#             port: 7779
#           initialDelaySeconds: 45
#           periodSeconds: 10
#         readinessProbe:
#           httpGet:
#             path: /grid
#             port: 7779
#           initialDelaySeconds: 20
#           periodSeconds: 50
---
apiVersion: v1
kind: Service
metadata:
  name: discodigg
  namespace: discodigg-prod
spec:
  selector: { app: discodigg }
  ports:
    - port: 80
      targetPort: 8081
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: discodigg
  namespace: discodigg-prod
  labels: { version: "2" }
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      more_set_headers "Access-Control-Allow-Origin: https://blindspot.pinkstack.com";
#      more_set_headers "Access-Control-Allow-Methods: *";
#      more_set_headers "Access-Control-Allow-Headers: *";
#      more_set_headers "Access-Control-Expose-Headers: Content-Length,Content-Range";
spec:
  ingressClassName: nginx
  rules:
    - host: discord.pinkstack.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: discodigg
                port: { number: 80 }
